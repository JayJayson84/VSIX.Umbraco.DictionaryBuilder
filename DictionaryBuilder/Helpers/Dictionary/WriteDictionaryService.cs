using DictionaryBuilder.Models;
using System.IO;
using System.Text;

namespace DictionaryBuilder
{
    internal sealed partial class DictionaryHelper
    {

        #region " Public Methods "

        /// <summary>
        /// Writes the dictionary service methods to a class file in the specified location.
        /// </summary>
        /// <param name="namespace">The namespace of the encapsulated service class.</param>
        /// <param name="filePath">The full path of the file that will be written.</param>
        public static void WriteDictionaryService(string @namespace, string filePath)
        {
            Directory.CreateDirectory(Path.GetDirectoryName(filePath));

            var sb = new StringBuilder();

            sb.Append("using System;")
              .AppendLine()
              .Append("using System.Globalization;")
              .AppendLine()
              .Append("using Umbraco.Core.Composing;")
              .AppendLine()
              .Append("using Umbraco.Core.Models;")
              .AppendLine()
              .AppendLine()
              .Append($"namespace {@namespace}")
              .AppendLine()
              .Append("{")
              .AppendLine()
              .Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append("/// Defines the Dictionary Service, which provides operations to easily retrieve localised Dictionary members.")
              .AppendLine()
              .Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append("public class DictionaryService : IDictionaryService")
              .AppendLine()
              .Append(Indent).Append("{")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("#region \" Instance Fields \"")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("private readonly ILocalizationService _localizationService;")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("#endregion")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("#region \" Constructors \"")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Defines the Dictionary Service, which provides operations to easily retrieve localised Dictionary members.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public DictionaryService()")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("_localizationService = Current.Factory.GetInstance<ILocalizationService>();")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("Culture = Culture ?? UmbracoCulture.Default;")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Defines the Dictionary Service, which provides operations to easily retrieve localised Dictionary members.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"localizationService\">A reference to the <see cref=\"ILocalizationService\"/> instance.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public DictionaryService(ILocalizationService localizationService)")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("_localizationService = localizationService;")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Defines the Dictionary Service, which provides operations to easily retrieve localised Dictionary members.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"culture\">The <see cref=\"CultureInfo\"/> to use when getting localised dictionary values.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public DictionaryService(CultureInfo culture) : this()")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("Culture = culture ?? UmbracoCulture.Default;")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Defines the Dictionary Service, which provides operations to easily retrieve localised Dictionary members.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"cultureCode\">The language/region (e.g. en-UK) of the <see cref=\"CultureInfo\"/> to use when getting localised dictionary values.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public DictionaryService(string cultureCode) : this()")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("CultureCode = cultureCode;")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("#endregion")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("#region \" Properties \"")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Gets or sets the <see cref=\"CultureInfo\"/> to use when getting localised dictionary values.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public CultureInfo Culture")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("get => _culture;")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("set => _culture = value ?? UmbracoCulture.Default;")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("private CultureInfo _culture = UmbracoCulture.Default;")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Gets or sets the <see cref=\"Culture\"/> language/region e.g. en-UK.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public string CultureCode")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("get")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append("return Culture.Name;")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("set")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append("try")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append("Culture = string.IsNullOrWhiteSpace(value)")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append("? UmbracoCulture.Default")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append(": new CultureInfo(value);")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append("catch")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append("Culture = UmbracoCulture.Default;")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("#endregion")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("#region \" Public Methods \"")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Gets an <see cref=\"IDictionaryItem\"/> from the description attribute of a <see cref=\"DictionaryKey\"/> enum.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"key\">A <see cref=\"DictionaryKey\"/> member.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <returns>An <see cref=\"IDictionaryItem\"/> item.</returns>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public IDictionaryItem GetDictionaryItemByKey(DictionaryKey key)")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("if (!key.HasValue) return null;")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("return _localizationService.GetDictionaryItemByKey(key);")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Gets an <see cref=\"IDictionaryItem\"/> by it's key.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"key\">The dictionary key value.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <returns>An <see cref=\"IDictionaryItem\"/> item.</returns>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public IDictionaryItem GetDictionaryItemByKey(string key)")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("return _localizationService.GetDictionaryItemByKey(key);")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Gets the value of the dictionary item with the matching <paramref name=\"key\"/> and <paramref name=\"culture\"/>.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"key\">A <see cref=\"DictionaryKey\"/> member.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"culture\">Optionally specify the <see cref=\"CultureInfo\"/> of the dictionary value to return.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <returns>A locale <see cref=\"string\"/> for the dictionary item with matching <paramref name=\"key\"/> and <paramref name=\"culture\"/>. Otherwise <see langword=\"null\"/>.</returns>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <remarks>If a <paramref name=\"culture\"/> is not provided, the project's default <see cref=\"UmbracoCulture\"/> will be used.</remarks>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public string GetLocaleValueByKey(DictionaryKey key, CultureInfo culture = null)")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("if (!key.HasValue) return null;")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("return GetFormattedLocaleValueByKey(key, null, culture);")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Gets the value of the dictionary item with the matching <paramref name=\"key\"/> and <paramref name=\"culture\"/>.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"key\">The dictionary key.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"culture\">Optionally specify the <see cref=\"CultureInfo\"/> of the dictionary value to return.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <returns>A locale <see cref=\"string\"/> for the dictionary item with matching <paramref name=\"key\"/> and <paramref name=\"culture\"/>. Otherwise <see langword=\"null\"/>.</returns>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <remarks>If a <paramref name=\"culture\"/> is not provided, the project's default <see cref=\"UmbracoCulture\"/> will be used.</remarks>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public string GetLocaleValueByKey(string key, CultureInfo culture = null)")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("return GetFormattedLocaleValueByKey(key, null, culture);")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Gets the formatted value of the dictionary item with the matching <paramref name=\"key\"/> and <paramref name=\"culture\"/>.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"key\">A <see cref=\"DictionaryKey\"/> member.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"formatArgs\">An array of string representation to replace within a composite format string.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"culture\">Optionally specify the <see cref=\"CultureInfo\"/> of the dictionary value to return.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <returns>A locale <see cref=\"string\"/> for the dictionary item with matching <paramref name=\"key\"/> and <paramref name=\"culture\"/> and format items replaced by the representation <paramref name=\"formatArgs\"/>. Otherwise <see langword=\"null\"/>.</returns>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <remarks>If a <paramref name=\"culture\"/> is not provided, the project's default <see cref=\"UmbracoCulture\"/> will be used.</remarks>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public string GetFormattedLocaleValueByKey(DictionaryKey key, string[] formatArgs, CultureInfo culture = null)")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("if (!key.HasValue) return null;")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("return _localizationService")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append(".GetDictionaryItemByKey(key)")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append(".GetFormattedLocaleValue(formatArgs, culture ?? Culture);")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// Gets the formatted value of the dictionary item with the matching <paramref name=\"key\"/> and <paramref name=\"culture\"/>.")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// </summary>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"key\">The dictionary key.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"formatArgs\">An array of string representation to replace within a composite format string.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <param name=\"culture\">Optionally specify the <see cref=\"CultureInfo\"/> of the dictionary value to return.</param>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <returns>A locale <see cref=\"string\"/> for the dictionary item with matching <paramref name=\"key\"/> and <paramref name=\"culture\"/> and format items replaced by the representation <paramref name=\"formatArgs\"/>. Otherwise <see langword=\"null\"/>.</returns>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("/// <remarks>If a <paramref name=\"culture\"/> is not provided, the project's default <see cref=\"UmbracoCulture\"/> will be used.</remarks>")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("public string GetFormattedLocaleValueByKey(string key, string[] formatArgs, CultureInfo culture = null)")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("{")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append("return _localizationService")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append(".GetDictionaryItemByKey(key)")
              .AppendLine()
              .Append(Indent).Append(Indent).Append(Indent).Append(Indent).Append(".GetFormattedLocaleValue(formatArgs, culture ?? Culture);")
              .AppendLine()
              .Append(Indent).Append(Indent).Append("}")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append(Indent).Append("#endregion")
              .AppendLine()
              .AppendLine()
              .Append(Indent).Append("}")
              .AppendLine()
              .Append("}")
              .AppendLine();

            File.WriteAllText(filePath, sb.ToString());
        }

        #endregion

    }
}
